{"version":3,"sources":["actions/index.js","actions/types.js","components/Payments.js","components/Header.js","components/Landing.js","components/surveys/SurveyList.js","components/Dashboard.js","components/surveys/SurveyField.js","components/surveys/validateEmails.js","components/surveys/formFields.js","components/surveys/SurveyForm.js","components/surveys/SurveyFormReview.js","components/surveys/SurveyNew.js","components/App.js","reducers/index.js","reducers/authReducer.js","reducers/surveysReducer.js","index.js"],"names":["fetchUser","dispatch","a","axios","get","res","type","payload","data","handleToken","token","post","submitSurvey","values","history","push","fetchSurveys","Payments","name","description","amount","props","stripeKey","process","className","Component","connect","actions","Header","this","auth","href","key","style","margin","credits","to","renderContent","Landing","textAlign","SurveyList","surveys","reverse","map","survey","_id","title","body","Date","dateSent","toLocaleDateString","yes","no","renderSurveys","Dashboard","input","label","meta","error","touched","marginBottom","re","SurveyForm","_","formFields","Field","component","SurveyField","onSubmit","handleSubmit","onSurveySubmit","renderFields","reduxForm","validate","errors","recipients","emails","invalidEmails","split","email","trim","filter","test","length","validateEmails","each","form","destroyOnUnmount","state","formValues","surveyForm","withRouter","onCancel","reviewFields","onClick","SurveyNew","showFormReview","setState","App","exact","path","combineReducers","action","window","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.4e7c6b4a.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport { FETCH_USER, FETCH_SURVEYS } from './types';\r\n\r\nexport const fetchUser = () => async dispatch => {\r\n  const res = await axios.get('/api/current_user');\r\n\r\n  dispatch({ type: FETCH_USER, payload: res.data });\r\n};\r\n\r\nexport const handleToken = token => async dispatch => {\r\n  const res = await axios.post('/api/stripe', token);\r\n\r\n  dispatch({ type: FETCH_USER, payload: res.data });\r\n};\r\n\r\nexport const submitSurvey = (values, history) => async dispatch => {\r\n  const res = await axios.post('/api/surveys', values);\r\n\r\n  history.push('/surveys');\r\n  dispatch({ type: FETCH_USER, payload: res.data });\r\n};\r\n\r\nexport const fetchSurveys = () => async dispatch => {\r\n  const res = await axios.get('/api/surveys');\r\n\r\n  dispatch({ type: FETCH_SURVEYS, payload: res.data });\r\n};\r\n","export const FETCH_USER = 'fetch_user';\r\nexport const FETCH_SURVEYS = 'fetch_surveys';\r\n","import React, { Component } from 'react';\r\nimport StripeCheckout from 'react-stripe-checkout';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../actions';\r\n\r\nclass Payments extends Component {\r\n  render() {\r\n    return (\r\n      <StripeCheckout\r\n        name=\"Emaily\"\r\n        description=\"$5 for 5 email credits\"\r\n        amount={500}\r\n        token={token => this.props.handleToken(token)}\r\n        stripeKey={process.env.REACT_APP_STRIPE_KEY}\r\n      >\r\n        <button className=\"btn\">\r\n          Add Credits\r\n        </button>\r\n      </StripeCheckout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, actions)(Payments);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport Payments from './Payments';\r\n\r\nclass Header extends Component {\r\n  renderContent() {\r\n    switch (this.props.auth) {\r\n      case null:\r\n        return;\r\n      case false:\r\n        return <li><a href=\"/auth/google\">Login With Google</a></li>;\r\n      default:\r\n        return [\r\n          <li key=\"1\"><Payments /></li>,\r\n          <li key=\"3\" style={{ margin: '0 10px' }}>\r\n            Credits: {this.props.auth.credits}\r\n          </li>,\r\n          <li key=\"2\"><a href=\"/api/logout\">Logout</a></li>\r\n        ];\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <nav>\r\n        <div className=\"nav-wrapper\">\r\n          <Link\r\n            to={this.props.auth ? '/surveys' : '/'}\r\n            className=\"left brand-logo\"\r\n          >\r\n            Emaily\r\n          </Link>\r\n          <ul className=\"right\">\r\n            {this.renderContent()}\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps({ auth }) {\r\n  return { auth };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Header);\r\n","import React from 'react';\r\n\r\nconst Landing = () => {\r\n  return (\r\n    <div style={{ textAlign: 'center' }}>\r\n      <h1>\r\n        Emaily!\r\n      </h1>\r\n      Collect feedback form your users\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Landing;\r\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchSurveys } from '../../actions';\n\nclass SurveyList extends Component {\n  componentDidMount() {\n    this.props.fetchSurveys();\n  }\n\n  renderSurveys() {\n    return this.props.surveys.reverse().map(survey => {\n      return (\n        <div className=\"card darken-1\" key={survey._id}>\n          <div className=\"card-content\">\n            <span className=\"card-title\">{survey.title}</span>\n            <p>\n              {survey.body}\n            </p>\n            <p className=\"right\">\n              Sent On: {new Date(survey.dateSent).toLocaleDateString()}\n            </p>\n          </div>\n          <div className=\"card-action\">\n            <a>Yes: {survey.yes}</a>\n            <a>No: {survey.no}</a>\n          </div>\n        </div>\n      );\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        {this.renderSurveys()}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps({ surveys }) {\n  return { surveys };\n}\n\nexport default connect(mapStateToProps, { fetchSurveys })(SurveyList);\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport SurveyList from './surveys/SurveyList';\r\n\r\nconst Dashboard = () => {\r\n  return (\r\n    <div>\r\n      <SurveyList />\r\n      <div className=\"fixed-action-btn\">\r\n        <Link to=\"/surveys/new\" className=\"btn-floating btn-large red\">\r\n          <i className=\"material-icons\">add</i>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","// SurveyField contains logic to render a single\n// label and text input\nimport React from 'react';\n\nexport default ({ input, label, meta: { error, touched } }) => {\n  return (\n    <div>\n      <label>{label}</label>\n      <input {...input} style={{ marginBottom: '5px' }} />\n      <div className=\"red-text\" style={{ marginBottom: '20px' }}>\n        {touched && error}\n      </div>\n    </div>\n  );\n};\n","const re = /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n\nexport default emails => {\n  const invalidEmails = emails\n    .split(',')\n    .map(email => email.trim())\n    .filter(email => re.test(email) === false);\n\n  if (invalidEmails.length) {\n    return `These emails are invalid: ${invalidEmails}`;\n  }\n\n  return;\n};\n","export default [\n  { label: 'Campaign Title', name: 'title' },\n  { label: 'Subject Line', name: 'subject' },\n  { label: 'Email Body', name: 'body' },\n  { label: 'Recipient List', name: 'recipients' }\n];\n","// SurveyForm shows a form for a user to add input\nimport _ from 'lodash';\nimport React, { Component } from 'react';\nimport { reduxForm, Field } from 'redux-form';\nimport { Link } from 'react-router-dom';\nimport SurveyField from './SurveyField';\nimport validateEmails from './validateEmails';\nimport formFields from './formFields';\n\nclass SurveyForm extends Component {\n  renderFields() {\n    return _.map(formFields, ({ label, name }) => {\n      return (\n        <Field\n          key={name}\n          component={SurveyField}\n          type=\"text\"\n          label={label}\n          name={name}\n        />\n      );\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.props.handleSubmit(this.props.onSurveySubmit)}>\n          {this.renderFields()}\n          <Link to=\"/surveys\" className=\"red btn-flat white-text\">\n            Cancel\n          </Link>\n          <button type=\"submit\" className=\"teal btn-flat right white-text\">\n            Next\n            <i className=\"material-icons right\">done</i>\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nfunction validate(values) {\n  const errors = {};\n\n  errors.recipients = validateEmails(values.recipients || '');\n\n  _.each(formFields, ({ name }) => {\n    if (!values[name]) {\n      errors[name] = 'You must provide a value';\n    }\n  });\n\n  return errors;\n}\n\nexport default reduxForm({\n  validate,\n  form: 'surveyForm',\n  destroyOnUnmount: false\n})(SurveyForm);\n","// SurveyFormReview shows users their form inputs for review\nimport _ from 'lodash';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport formFields from './formFields';\nimport { withRouter } from 'react-router-dom';\nimport * as actions from '../../actions';\n\nconst SurveyFormReview = ({ onCancel, formValues, submitSurvey, history }) => {\n  const reviewFields = _.map(formFields, ({ name, label }) => {\n    return (\n      <div key={name}>\n        <label>{label}</label>\n        <div>\n          {formValues[name]}\n        </div>\n      </div>\n    );\n  });\n\n  return (\n    <div>\n      <h5>Please confirm your entries</h5>\n      {reviewFields}\n      <button\n        className=\"yellow darken-3 white-text btn-flat\"\n        onClick={onCancel}\n      >\n        Back\n      </button>\n      <button\n        onClick={() => submitSurvey(formValues, history)}\n        className=\"green btn-flat right white-text\"\n      >\n        Send Survey\n        <i className=\"material-icons right\">email</i>\n      </button>\n    </div>\n  );\n};\n\nfunction mapStateToProps(state) {\n  return { formValues: state.form.surveyForm.values };\n}\n\nexport default connect(mapStateToProps, actions)(withRouter(SurveyFormReview));\n","// SurveyNew shows SurveyForm and SurveyFormReview\nimport React, { Component } from 'react';\nimport { reduxForm } from 'redux-form';\nimport SurveyForm from './SurveyForm';\nimport SurveyFormReview from './SurveyFormReview';\n\nclass SurveyNew extends Component {\n  state = { showFormReview: false };\n\n  renderContent() {\n    if (this.state.showFormReview) {\n      return (\n        <SurveyFormReview\n          onCancel={() => this.setState({ showFormReview: false })}\n        />\n      );\n    }\n\n    return (\n      <SurveyForm\n        onSurveySubmit={() => this.setState({ showFormReview: true })}\n      />\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        {this.renderContent()}\n      </div>\n    );\n  }\n}\n\nexport default reduxForm({\n  form: 'surveyForm'\n})(SurveyNew);\n","import React, { Component } from 'react';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../actions';\r\n\r\nimport Header from './Header';\r\nimport Landing from './Landing';\r\nimport Dashboard from './Dashboard';\r\nimport SurveyNew from './surveys/SurveyNew';\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchUser();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <BrowserRouter>\r\n          <div>\r\n            <Header />\r\n            <Route exact path=\"/\" component={Landing} />\r\n            <Route exact path=\"/surveys\" component={Dashboard} />\r\n            <Route path=\"/surveys/new\" component={SurveyNew} />\r\n          </div>\r\n        </BrowserRouter>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, actions)(App);\r\n","import { combineReducers } from 'redux';\r\nimport { reducer as reduxForm } from 'redux-form';\r\nimport authReducer from './authReducer';\r\nimport surveysReducer from './surveysReducer';\r\n\r\nexport default combineReducers({\r\n  auth: authReducer,\r\n  form: reduxForm,\r\n  surveys: surveysReducer\r\n});\r\n","import { FETCH_USER } from '../actions/types';\r\n\r\nexport default function(state = null, action) {\r\n  // console.log(action);\r\n  switch (action.type) {\r\n    case FETCH_USER:\r\n      return action.payload || false;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { FETCH_SURVEYS } from '../actions/types';\n\nexport default function(state = [], action) {\n  switch (action.type) {\n    case FETCH_SURVEYS:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","import 'materialize-css/dist/css/materialize.min.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport reduxThunk from 'redux-thunk';\r\n\r\nimport App from './components/App';\r\nimport reducers from './reducers';\r\n\r\n// Development only axios helpers!\r\nimport axios from 'axios';\r\nwindow.axios = axios;\r\n\r\nconst store = createStore(reducers, {}, applyMiddleware(reduxThunk));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}><App /></Provider>,\r\n  document.querySelector('#root')\r\n);\r\n"],"sourceRoot":""}